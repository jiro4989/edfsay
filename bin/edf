#!/bin/bash

readonly THIS_DIR="$(cd "$(dirname "${BASH_SOURCE[0]:-${(%):-%N}}")"; pwd)"
SCRIPT_NAME=edf
readonly VERSION=v1.0.0
readonly FUNCTION_FILE="$THIS_DIR/$SCRIPT_NAME.functions"

main() {
  local cmd=$1
  shift
  case "$cmd" in
    say|words)
      : 何もしない
      ;;

    '-h'|'--help')
      usage
      return 0
      ;;

    '-v'|'--version')
      echo $VERSION
      return 0
      ;;

    '--edf')
      # TODO
      return 0
      ;;

    *)
      echo 不正
      return 1
      ;;
  esac

  local script_name="$SCRIPT_NAME"
  export SCRIPT_NAME="$SCRIPT_NAME $cmd"
  "$THIS_DIR/$script_name.$cmd" ${1+"$@"}
}

usage() {
  cat << EOS
$SCRIPT_NAME はEDFのセリフを出力するコマンド集を管理する。

$(__get_usage_sections Usage:)

$(__get_usage_sections Examples:)

Commands:
$(__get_usage_short_descriptions)

Options:
    -h, --help          このヘルプを出力する
    -v, --version       バージョン情報を出力する
EOS
}

__get_usage_sections() {
  local section_title="$1"
  echo "$section_title"
  for cmd in $THIS_DIR/$SCRIPT_NAME.*; do
    if [ ! "$cmd" = "$FUNCTION_FILE" ]; then
      __get_usage_section "$section_title" "$cmd" -h
    fi
  done
}

__get_usage_section() {
  local section="$1"
  shift
  $@ | awk '
{
  if ($0=="'"$section"'") { section_flag=1 }
  else if (section_flag) {print $0}
  if (section_flag && $0 == "") { section_flag=0 }
}' | sed 's/\./ /'
}

__get_usage_short_descriptions() {
  for cmd in $THIS_DIR/$SCRIPT_NAME.*; do
    if [ ! "$cmd" = "$FUNCTION_FILE" ]; then
      printf "    $("$cmd" -h | head -n 1)" | sed 's/\./ /'
      echo
    fi
  done
}

main ${1+"$@"}
